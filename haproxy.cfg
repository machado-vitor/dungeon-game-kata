global
    log stdout format raw local0
    maxconn 2000
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log     global
    option  httplog
    option  dontlognull
    option  http-server-close
    option  redispatch
    option  forwardfor

    # timeouts mais apertados p/ o caos
    timeout connect      2s   # conexão ao backend
    timeout server       5s   # resposta do backend (+ = menos sensível)
    timeout client       5s   # keep-alive do cliente
    timeout check        3s   # healthcheck
    timeout http-request 5s   # le headers do cliente
    timeout queue        3s   # espera na fila do backend

    retries 3

    # log with Tw/Tc/Tr/Ta timings
    log-format "%ci:%cp [%T] %ft/%b/%s %ST %B %Tw/%Tc/%Tr/%Ta req_id=%ID"

frontend http-in
    bind *:80
    # Health check endpoint
    monitor-uri /haproxy-health
    default_backend apps

# Stats frontend
frontend stats-frontend
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 5s
    stats admin if TRUE

backend apps
    balance roundrobin
    # Use Spring Boot Actuator health endpoint for active health checks
    option httpchk GET /actuator/health
    http-check expect status 200
    
    # Backend servers with proper health checks
    server app1 app1:8081 check inter 3s fall 3 rise 2
    server app2 app2:8081 check inter 3s fall 3 rise 2
    server app3 app3:8081 check inter 3s fall 3 rise 2
    option http-server-close
    option forwardfor
    maxconn 300
