services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 15

  app1:
    build: .
    environment:
      SPRING_PROFILES_ACTIVE: docker
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512m

  app2:
    build: .
    environment:
      SPRING_PROFILES_ACTIVE: docker
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    depends_on:
      db:
        condition: service_healthy

  app3:
    build: .
    environment:
      SPRING_PROFILES_ACTIVE: docker
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    depends_on:
      db:
        condition: service_healthy

  haproxy:
    image: haproxy:latest
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "80:80"
      - "8404:8404"  # HAProxy stats page
    depends_on:
      - app1
      - app2
      - app3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  pumba:
    image: gaiaadm/pumba:0.9.0
    container_name: pumba-chaos
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["--log-level", "info", "kill", "--signal", "SIGTERM", "re2:^dungeon-game-kata-app"]
    depends_on:
      - app1
      - app2
      - app3

  # Chaos Testing Tools (optional)
  chaos-toolkit:
    image: chaostoolkit/chaostoolkit:latest
    volumes:
      - ./chaos:/chaos
      - /var/run/docker.sock:/var/run/docker.sock:ro
    working_dir: /chaos
    command: ["sleep", "infinity"]
    profiles: ["chaos"]

volumes:
  pgdata:
